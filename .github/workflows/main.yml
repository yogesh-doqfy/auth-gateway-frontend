name: Deploy Angular from Artifact Registry to S3

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: crucial-context-454812-v3  # Replace with your project ID

      - name: Configure gcloud
        run: gcloud config set project crucial-context-454812-v3

      - name: Find Latest Version of `auth-frontend`
        run: |
          LATEST_VERSION=$(gcloud artifacts versions list \
            --package=auth-frontend \
            --repository=auth-gateway-frontend-cicd \
            --location=us-west2 \
            --sort-by="~CREATE_TIME" \
            --limit=1 \
            --format="value(name)")
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Ensure Download Directory Exists
        run: mkdir -p downloaded_package

      - name: Download Latest Package
        run: |
          gcloud artifacts files download auth-frontend/${{ env.LATEST_VERSION }}/auth-frontend-${{ env.LATEST_VERSION }}.tgz \
            --repository=auth-gateway-frontend-cicd \
            --location=us-west2 \
            --destination=downloaded_package/

      - name: Rename Downloaded Package
        run: |
          mv downloaded_package/auth-frontend%2F${{ env.LATEST_VERSION }}%2Fauth-frontend-${{ env.LATEST_VERSION }}.tgz \
             downloaded_package/auth-frontend-${{ env.LATEST_VERSION }}.tgz     

      - name: Extract Package
        run: |
          tar -xzf downloaded_package/auth-frontend-${{ env.LATEST_VERSION }}.tgz -C downloaded_package/
          ls -l downloaded_package/ # Check the extracted structure

      - name: Locate Dist Folder
        run: |
          find downloaded_package -type d -name "dist" # Debugging to locate "dist" folder

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2  # Change to your AWS region

      - name: Upload Dist Folder to AWS S3
        run: |
          DIST_PATH=$(find downloaded_package -type d -name "dist")
          if [ -d "$DIST_PATH" ]; then
            AUTH_PORTAL_PATH="$DIST_PATH/auth-portal"
            if [ -d "$AUTH_PORTAL_PATH" ]; then
              aws s3 sync $AUTH_PORTAL_PATH s3://doqfy-sample-check/ --delete
            else
              echo "Error: 'auth-portal' folder not found inside 'dist'!"
              exit 1
            fi
          else
            echo "Error: 'dist' folder not found!"
            exit 1
          fi
