name: Deploy Angular from Artifact Registry to S3

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Enter the version to deploy (leave empty for latest)"
        required: false
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Deployment Version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            SELECTED_VERSION="${{ github.event.inputs.version }}"
          else
            SELECTED_VERSION="0.0.6"  # default fallback
          fi
          echo "SELECTED_VERSION=$SELECTED_VERSION" >> $GITHUB_ENV

      - name: Download tarball from Artifact Registry NPM
        run: |
          mkdir -p downloaded_package
          TAR_URL="https://us-west2-npm.pkg.dev/crucial-context-454812-v3/auth-gateway-frontend-cicd/auth-frontend/-/auth-frontend-${{ env.SELECTED_VERSION }}.tgz"
          echo "Downloading: $TAR_URL"
          curl -L -o downloaded_package/frontend-${{ env.SELECTED_VERSION }}.tgz "$TAR_URL"

      - name: Extract tarball
        run: |
          tar -xzf downloaded_package/frontend-${{ env.SELECTED_VERSION }}.tgz -C downloaded_package/
          ls -l downloaded_package/package

      - name: Locate dist folder
        run: |
          DIST_PATH=$(find downloaded_package/package -type d -name "dist" -print -quit)
          if [ -z "$DIST_PATH" ]; then
            echo "Error: 'dist' folder not found!"
            exit 1
          fi
          echo "DIST_PATH=$DIST_PATH" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload dist/auth-portal to S3
        run: |
          if [ -d "${{ env.DIST_PATH }}/auth-portal" ]; then
            aws s3 sync "${{ env.DIST_PATH }}/auth-portal" s3://doqfy-sample-check/ --delete
          else
            echo "Error: 'auth-portal' folder not found inside dist!"
            exit 1
          fi
