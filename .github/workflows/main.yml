name: Deploy Angular from Artifact Registry to GCS

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure gcloud
        run: gcloud config set project crucial-context-454812-v3

      - name: Find Latest Version of `auth-frontend`
        id: find_version
        run: |
          LATEST_VERSION=$(gcloud artifacts versions list \
            --package=auth-frontend \
            --repository=auth-gateway-frontend-cicd \
            --location=us-west2 \
            --sort-by="~CREATE_TIME" \
            --limit=1 \
            --format="value(name)")

          if [[ -z "$LATEST_VERSION" ]]; then
            echo "ERROR: No package versions found!" >&2
            exit 1
          fi

          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV
          echo "Latest package version: $LATEST_VERSION"

      - name: Ensure Download Directory Exists
        run: mkdir -p downloaded_package

      - name: Debugging - Show Environment Variables
        run: echo "Latest Version: ${{ env.LATEST_VERSION }}"

      - name: Download Latest Package
        run: |
          gcloud artifacts files download \
            auth-frontend/${{ env.LATEST_VERSION }}/auth-frontend-${{ env.LATEST_VERSION }}.tgz \
            --repository=auth-gateway-frontend-cicd \
            --location=us-west2 \
            --destination=downloaded_package/

      - name: Fix Filename Issues (Handle Encoded Names)
        run: |
          FILE_PATH=$(find downloaded_package -type f -name "auth-frontend*")
          
          if [[ -z "$FILE_PATH" ]]; then
            echo "ERROR: Downloaded file not found!" >&2
            exit 1
          fi

          TARGET_PATH="downloaded_package/auth-frontend-${{ env.LATEST_VERSION }}.tgz"
          mv "$FILE_PATH" "$TARGET_PATH"

          echo "File renamed to: $TARGET_PATH"

      - name: Verify Downloaded Package
        run: ls -l downloaded_package/

      - name: Upload to Google Cloud Storage
        run: |
          gsutil cp downloaded_package/auth-frontend-${{ env.LATEST_VERSION }}.tgz gs://your-bucket-name/

      - name: Print Deployment URL
        run: |
          echo "âœ… App package uploaded successfully!"
          echo "ðŸ”— Download URL: https://storage.googleapis.com/your-bucket-name/auth-frontend-${{ env.LATEST_VERSION }}.tgz"
