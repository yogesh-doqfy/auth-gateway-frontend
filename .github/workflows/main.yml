name: Publish NPM Package

on:
  push:
    branches:
      - main  # Change to the branch you want to trigger the workflow

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: "https://npm.pkg.github.com"

      - name: Authenticate with NPM Registry
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Fetch Latest Version and Increment
        run: |
          PACKAGE_NAME=$(jq -r .name package.json)
          echo "Fetching versions for $PACKAGE_NAME from registry..."

          # Fetch versions, but handle errors gracefully
          PUBLISHED_VERSIONS=$(npm view "$PACKAGE_NAME" versions --json --registry=https://npm.pkg.github.com/ 2>/dev/null || echo "[]")

          # Check if response contains an error (e.g., package not found)
          if [[ "$PUBLISHED_VERSIONS" =~ "code" ]]; then
            echo "Package not found in registry. Starting at version 0.0.1"
            NEW_VERSION="0.0.1"
          else
            # Parse versions correctly
            VALID_VERSIONS=$(echo "$PUBLISHED_VERSIONS" | jq -r 'map(select(test("^[0-9]+\\.[0-9]+\\.[0-9]+$")))')

            if [[ -z "$VALID_VERSIONS" || "$VALID_VERSIONS" == "[]" ]]; then
              echo "No valid versions found. Starting at version 0.0.1"
              NEW_VERSION="0.0.1"
            else
              LATEST_VERSION=$(echo "$VALID_VERSIONS" | jq -r 'map(split(".") | map(tonumber)) | sort | last | [.[] | tostring] | join(".")')
              IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_VERSION"
              NEW_VERSION="$MAJOR.$MINOR.$((PATCH + 1))"
            fi
          fi

          echo "New version to be published: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          
          npm version "$NEW_VERSION" --no-git-tag-version
          echo "Updated package.json version to $NEW_VERSION"

      - name: Install Dependencies
        run: npm install

      - name: Build Package (if applicable)
        run: npm run build || echo "No build step found, skipping..."

      - name: Publish to NPM Registry
        run: npm publish --registry=https://npm.pkg.github.com/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Clean up
        run: rm -f ~/.npmrc

