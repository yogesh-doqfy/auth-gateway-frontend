name: Build and Deploy Angular App using Docker

on:
  push:
    branches:
      - master
      - dev
      - staging
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Version and Branch Name
        id: get_version_branch
        run: |
          echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/} | tr -d '\n')" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build -t my-angular-app:latest .

      - name: Run Docker Container
        run: |
          docker run -d --name angular-container my-angular-app:latest tail -f /dev/null

      - name: Copy Build Artifacts from Container
        run: |
          mkdir -p ./dist/auth-portal
          docker cp angular-container:/usr/share/nginx/html/auth-portal ./dist/auth-portal

      - name: Stop and Remove Container
        run: |
          docker stop angular-container
          docker rm angular-container

      - name: Verify Build Artifacts
        run: |
          ls -lah ./dist/auth-portal

      - name: Zip Build Artifacts (Latest)
        run: |
          cd ./dist
          zip -r "latest-${BRANCH}.zip" auth-portal
          ls -lah  # Verify zip files

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # ðŸ”¥ **Fetch ALL Existing Versions from GCS**
      - name: Fetch Existing Versions from GCS
        run: |
          FILES=$(gsutil ls gs://doqfy-auth-gateway-fronend-dist/staging/ | grep -oP 'v\K[0-9]+(?=-staging\.zip)' || echo "")

          if [[ -z "$FILES" ]]; then
            NEW_VERSION=1
          else
            NEW_VERSION=$(( $(echo "$FILES" | sort -n | tail -n1) + 1 ))
          fi

          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "Next Version: v${NEW_VERSION}-staging.zip"

      - name: Zip Versioned Artifacts
        run: |
          cd ./dist
          zip -r "v${NEW_VERSION}-${BRANCH}.zip" auth-portal
          ls -lah  # Verify zip files

      # âœ… **Delete Only latest-staging.zip (Keep Versioned Files)**
      - name: Delete Old Latest Zip File
        run: |
          gsutil rm gs://doqfy-auth-gateway-fronend-dist/staging/latest-${BRANCH}.zip || echo "No previous latest zip found, skipping delete."

      # ðŸš€ **Upload latest zip (Always replaced)**
      - name: Upload Latest Zip File to GCS
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: ./dist/latest-${{ env.BRANCH }}.zip
          destination: doqfy-auth-gateway-fronend-dist/staging
          gzip: false

      # ðŸš€ **Upload versioned zip (NEVER overwritten)**
      - name: Upload Versioned Zip File to GCS
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: ./dist/v${{ env.NEW_VERSION }}-${{ env.BRANCH }}.zip
          destination: doqfy-auth-gateway-fronend-dist/staging
          gzip: false
